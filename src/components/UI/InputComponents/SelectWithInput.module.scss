.SelectWithInput {
  margin: 0 0 30px 0;

  .SelectAndInputWrapper {
    border: 1px solid var(--colorborder);
    display: flex;
    flex-direction: row;
    flex-basis: 1;
    flex-grow: 1;
    box-sizing: content-box;
    &.Invalid {
      border: 1px solid red;
      background-color: white;
    }
  }

  select {
    border: none;
    height: 48px;
    &:focus {
      outline: 0;
    }

    outline: none;
    background-color: white;
    border-radius: var(--borderradius);
    font: inherit;
    padding: 6px 15px;
    box-sizing: border-box;
    color: var(--colordefault);
    flex-grow: 1;
    flex-basis: 1;

    width: inherit;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;

    background-repeat: no-repeat;
    background-size: 0.5em auto;
    background-position: right 15px center;
    background-image: url("data:image/svg+xml;charset=utf-8, \
    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 60 40'> \
      <polygon points='0,0 60,0 30,40' style='fill:black;'/> \
    </svg>");

    &.IsOpen {
      background-image: url("data:image/svg+xml;charset=utf-8, \
    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 60 40'> \
      <polygon points='0, 30 30, 0 60, 30' style='fill:black;'/> \
    </svg>");
    }
  }

  .RemoveButton {
    margin-left: 10px;
  }

  .InputElement {
    outline: none;
    border: none;
    background-color: white;
    border-radius: var(--borderradius);
    font: inherit;
    padding: 6px 10px;
    box-sizing: border-box;
    color: var(--colordefault);
    flex-basis: 1;
    flex-grow: 1;
  }
}

.Divider {
  height: inherit;
  width: 1px;
  background-color: var(--colorborder);
  &.Invalid {
    background-color: red;
  }
}

.FlexGroupRow {
  display: flex;
  flex-direction: row;
  margin-bottom: 10px;
}
